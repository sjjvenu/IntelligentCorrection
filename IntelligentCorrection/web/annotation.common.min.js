var sys = {teacher_id: null, writer_id: null, writing_id: null, anno_mode: "none", debug: 0};
var stu_review = {};
var anno = {
    work_mode: "simple",
    work_mode_before_update: "simple",
    mark_as_model_essay: 0,
    any_mark_be_clicked: 0,
    line_type: null,
    isMouseDown: false,
    nowTagType: "free",
    startTagId: "uo_",
    endTagId: "uo_",
    endId: 0,
    locale: 0,
    side: {start: 0, end: 0},
    sections: 0,
    allSelectedRegion: {},
    nowSelectedRegion: {begin: 0, end: 0, lastEnd: 0},
    reviewed_by: [],
    annotations: {errs: [], errs_mac: [], modis: [], evals: [], sents:[]},
    now_item: {
        type: null,
        tagType: "",
        name: "",
        id: 0,
        notes: "",
        ranges: [],
        abbr: "abbr",
        op: "none",
        del: null,
        del_content: null,
        ins: null,
        ins_direction: null,
        sub: null,
        sub_content: null
    },
    now_mark_id: null,
    now_err_id: null,
    now_modi_id: null,
    now_eval_id: null,
    now_err_mac_id: null,
    now_stu_id: 0,
    title: "",
    content: {},
    q: {type: ""},
    charCount: 0,
    res_type: ""
};
function get_sides() {
    anno.side.start = $(".selected:first").attr("id");
    anno.side.end = $(".selected:last").attr("id")
}
function cancel_side() {
    anno.side.start = 0;
    anno.side.end = 0
}
function cancel_action(c, b) {
    var a = $("#" + c + b);
    if (a.attr("sid") == $("#" + anno.locale).attr("sid") && a.hasClass("selected")) {
        a.removeClass("selected");
        return true
    } else {
        return false
    }
}
function cancel_choose(d, a, c) {
    for (var b = a; b >= 1; b--) {
        if (!cancel_action(d, b)) {
            break
        }
    }
    for (var b = a + 1; b <= c; b++) {
        if (!cancel_action(d, b)) {
            break
        }
    }
}
function cancel_single() {
    var b = anno.locale.substr(0, 3);
    var a = parseInt(anno.locale.substr(3));
    cancel_choose(b, a, anno.charCount)
}
function mouseup(event) {
    if(event.which !=1) {
        return
    }
    var f = anno.startTagId.substr(0, 3);
    var h = null;
    var g = null;
    if (f == "uo_" && anno.nowSelectedRegion.begin != 0 && anno.nowSelectedRegion.end != 0) {
        h = anno.nowSelectedRegion;
        g = anno.charCount
    }
    if (h) {
        var b = h.begin;
        var c = h.end;
        if (b > c) {
            var d = c;
            c = b;
            b = d
        }
        var displayAnno=false;
        if ($("#" + f + b).text().charCodeAt() < 256) {
            for (var e = b - 1; e >= 1; e--) {
                var j = $("#" + f + e);
                var a = j.next("span");
                if ("1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-=+'\";:/<>@#$%&*^".indexOf(j.text()) != -1 && j.next().prop("tagName") == "SPAN" && !(a.hasClass("mark") || a.hasClass("mark-good") || a.hasClass("mark-bad"))) {
                    j.addClass("selected")
                } else {
                    break
                }
            }
            displayAnno=true;
        }
        if ($("#" + f + c).text().charCodeAt() < 256) {
            for (var e = c + 1; e <= g; e++) {
                var j = $("#" + f + e);
                var a = $("#" + f + (e - 1)).next("span");
                if ("1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-=+'\";:/<>@#$%&*^".indexOf(j.text()) != -1 && $("#" + f + (e - 1)).next().prop("tagName") == "SPAN" && !(a.hasClass("mark") || a.hasClass("mark-good") || a.hasClass("mark-bad"))) {
                    j.addClass("selected")
                } else {
                    break
                }
            }
            displayAnno=true;
        }
        if(displayAnno) {
          if( anno.work_mode == 'simple') {
            $("#composition").popup("open", {x: event.pageX -50, y: event.pageY + 158, transition: "flip"})
          } else {
            $("#composition").popup("open", {x: event.pageX -50, y: event.pageY + 210, transition: "flip"})
          }

        }
    }
    anno.isMouseDown = false;
    anno.startTagId = "uo_";
    anno.endTagId = "uo_";
    anno.nowSelectedRegion.begin = 0;
    anno.nowSelectedRegion.end = 0;
    anno.nowSelectedRegion.lastEnd = 0

}

function init_static_new(n, s) {
    $("#pop-reset").hide()
    $("#" + n).html("");
    var r = anno.content.p;
    var b = 0;
    var d = 0;
    var m = 0;
    var e = r.length;
    var p = "";
    for (var l = 0; l < e; l++) {
        m = l;
        var o = (r[l] ? r[l].s : []);
        var q = "";
        var c = o.length;
        for (var g = 0; g < c; g++) {
            d++;
            var h = o[g];
            var t = h.length;
            for (var f = 0; f < t; f++) {
                b++;
                var a = h[f];
                q += '<span class="unit" id="uo_' + b + '" sid="' + d + '">' + a + "</span>"
            }
            // q += '<a href="javascript:void(0);" class="endlink" title="" sid="' + d + '">Â¶</a>'
        }
        p += '<ul class="para"><li class="num num-o w_1" pid="' + m + '">' + (l + 1) + '</li><li pid="' + m + '" class="paragraph-o w_3"><div class = "para">' + q + "</div></li></ul>"
    }
    $("#" + n).append($(p));
    anno.charCount = b;
    init_render_static(n, s)
}
function init_stu_static(o, n) {
    $(o).html("");
    var s = n.content.p;
    var b = 0;
    var d = 0;
    var m = 0;
    var e = s.length;
    var q = "";
    for (var l = 0; l < e; l++) {
        m = l;
        var p = (s[l] ? s[l].s : []);
        var r = "";
        var c = p.length;
        for (var g = 0; g < c; g++) {
            d++;
            var h = p[g];
            var t = h.length;
            for (var f = 0; f < t; f++) {
                b++;
                var a = h[f];
                r += '<span class="unit" id="uo_' + b + '" sid="' + d + '">' + a + "</span>"
            }
            // r += '<a href="javascript:void(0);" class="endlink" title="" sid="' + d + '">' + T("endlink") + "</a>"
        }
        q += '<ul class="para"><li class="num num-o w_1" pid="' + m + '">' + (l + 1) + '</li><li pid="' + m + '" class="paragraph-o w_3"><div class = "para">' + r + "</div></li></ul>"
    }
    $(o).append($(q));
    init_render_stu_static(o, n)
}
function init_render_static(c, a) {
  $("#pop-reset").hide()
    var b = c || "table_anno";
    $("#" + b).mousedown(function (d) {
        return false
    });
    $("#" + b + " span.unit").mousedown(function () {
        return false
    }).mouseup(function () {
        return false
    }).mousemove(function () {
        return false
    });
    $("#" + b + " a.endlink").click(function () {
        var d = $(this).parent().find("span.unit[sid=" + $(this).attr("sid") + "]");
        if (!d.hasClass("selected")) {
            d.addClass("selected")
        } else {
            d.removeClass("selected")
        }
        section()
    }).mouseover(function () {
        $(this).parent().find("span.unit[sid=" + $(this).attr("sid") + "]").addClass("highlight")
    }).mouseout(function () {
        $(this).parent().find("span.unit[sid=" + $(this).attr("sid") + "]").removeClass("highlight")
    });
    $("#" + b).on("mouseenter", "span.mark", function () {
        var e = parseInt($(this).attr("err_id"));
        var d = anno.annotations.errs[e - 1];
        render_highlight_helper(d, "#" + b + " span#uo_", "highlight-tag")
    }).on("mouseleave", "span.mark", function () {
        remove_highlight_helper("#" + b + " span.highlight-tag", "highlight-tag")
    });
    $("#" + b).on("mouseover", "span.mark_mac", function () {
        var e = parseInt($(this).text().replace(/[\[\]]/, ""));
        var d = anno.annotations.errs_mac[e - 1];
        render_highlight_helper(d, "#" + b + " span#uo_", "highlight-tag-mac")
    }).on("mouseout", "span.mark_mac", function () {
        remove_highlight_helper("#" + b + " span.highlight-tag-mac", "highlight-tag-mac")
    });
    $("#" + b).on("mouseover", "span.mark-ins", function () {
        var e = parseInt($(this).attr("modi_id"));
        var d = anno.annotations.modis[e - 1];
        render_highlight_helper(d, "#" + b + " span#uo_", "highlight-tag")
    }).on("mouseout", "span.mark-ins", function () {
        remove_highlight_helper("#" + b + " span.highlight-tag", "highlight-tag")
    });
    $("#" + b).on("mouseover", "span.mark-sub", function () {
        var e = parseInt($(this).attr("modi_id"));
        var d = anno.annotations.modis[e - 1];
        render_highlight_helper(d, "#" + b + " span#uo_", "highlight-tag")
    }).on("mouseout", "span.mark-sub", function () {
        remove_highlight_helper("#" + b + " span.highlight-tag", "highlight-tag")
    });
    $("#" + b).on("mouseover", "span.mark-del", function () {
        var e = parseInt($(this).attr("modi_id"));
        var d = anno.annotations.modis[e - 1];
        render_highlight_helper(d, "#" + b + " span#uo_", "highlight-tag")
    }).on("mouseout", "span.mark-del", function () {
        remove_highlight_helper("#" + b + " span.highlight-tag", "highlight-tag")
    });
    $("#" + b).on("mouseover", "span.mark-good", function () {
        var e = parseInt($(this).attr("eval_id"));
        var d = anno.annotations.evals[e - 1];
        render_highlight_helper(d, "#" + b + " span#uo_", "highlight-good");
        updateSysInfo()
    }).on("mouseout", "span.mark-good", function () {
        remove_highlight_helper("#" + b + " span.highlight-good", "highlight-good")
    });
    $("#" + b + " ").on("mouseover", "span.mark-bad", function () {
        var e = parseInt($(this).attr("eval_id"));
        var d = anno.annotations.evals[e - 1];
        render_highlight_helper(d, "#" + b + " span#uo_", "highlight-bad");
        updateSysInfo()
    }).on("mouseout", "span.mark-bad", function () {
        remove_highlight_helper("#" + b + " span.highlight-bad", "highlight-bad")
    });
    $("#" + b + " ").on("mouseover", "span.mark-question", function () {
        var e = parseInt($(this).attr("eval_id"));
        var d = anno.annotations.evals[e - 1];
        render_highlight_helper(d, "#" + b + " span#uo_", "highlight-question")
    }).on("mouseout", "span.mark-question", function () {
        remove_highlight_helper("#" + b + " span.highlight-question", "highlight-question")
    });
    $("#" + b + " ").on("click", "span.line_err, span.line_err_mac, span.line_ins, span.line_sub, span.line_del", function () {
    });
    if (a == "teacher") {
        render_errs()
    } else {
        render_errs_mac()
    }
    render_modis();
    render_evals()
}
function init_render_stu_static(a, b) {
    $(a).mousedown(function (c) {
        return false
    });
    $(a + " span.unit").mousedown(function () {
        return false
    }).mouseup(function () {
        return false
    }).mousemove(function () {
        return false
    });
    $(a + " a.endlink").click(function () {
        var c = $(this).parent().find("span.unit[sid=" + $(this).attr("sid") + "]");
        if (!c.hasClass("selected")) {
            c.addClass("selected")
        } else {
            c.removeClass("selected")
        }
        section()
    }).mouseover(function () {
        $(this).parent().find("span.unit[sid=" + $(this).attr("sid") + "]").addClass("highlight")
    }).mouseout(function () {
        $(this).parent().find("span.unit[sid=" + $(this).attr("sid") + "]").removeClass("highlight")
    });
    $(a).on("mouseenter", "span.mark", function () {
        var d = parseInt($(this).attr("err_id"));
        var c = anno.annotations.errs[d - 1];
        render_highlight_helper(c, a + " span#uo_", "highlight-tag")
    }).on("mouseleave", "span.mark", function () {
        remove_highlight_helper(a + " span.highlight-tag", "highlight-tag")
    });
    $(a).on("mouseover", "span.mark-ins", function () {
        var d = parseInt($(this).attr("modi_id"));
        var c = anno.annotations.modis[d - 1];
        render_highlight_helper(c, a + " span#uo_", "highlight-tag")
    }).on("mouseout", "span.mark-ins", function () {
        remove_highlight_helper(a + " span.highlight-tag", "highlight-tag")
    });
    $(a).on("mouseover", "span.mark-sub", function () {
        var d = parseInt($(this).attr("modi_id"));
        var c = anno.annotations.modis[d - 1];
        render_highlight_helper(c, a + " span#uo_", "highlight-tag")
    }).on("mouseout", "span.mark-sub", function () {
        remove_highlight_helper(a + " span.highlight-tag", "highlight-tag")
    });
    $(a).on("mouseover", "span.mark-del", function () {
        var d = parseInt($(this).attr("modi_id"));
        var c = anno.annotations.modis[d - 1];
        render_highlight_helper(c, a + " span#uo_", "highlight-tag")
    }).on("mouseout", "span.mark-del", function () {
        remove_highlight_helper(a + " span.highlight-tag", "highlight-tag")
    });
    anno.annotations = b.annotations;
    render_errs();
    render_modis()
}
function init_render() {
    $(document.body).mouseup(function (event) {
        mouseup(event)
    });
    $("#table_anno").on("mousedown", "span.selected", function (c) {
        if (c.which == 1) {
            anno.locale = this.id;
            get_sides();
            get_selected_range();
            anno_mode_new();
            var a = T("simple_mode");
            var b = anno.now_item.ranges.length;
            if (anno.work_mode != "simple") {
                a = T("complicated_mode")
            }
            TIP("TIP", a + T("region_selected") + b + "ï¼" + $toJSON(anno.now_item.ranges), 0);
            if (anno.sections == 1) {
            } else {
                if (anno.sections == 2) {
                }
            }
        } else {
            if (c.which == 3) {
                stat_new();
                anno.any_mark_be_clicked = 0;
                var a = T("simple_mode");
                anno.now_item.ranges = [];
                if (anno.work_mode != "simple") {
                    a = T("complicated_mode")
                }
                TIP("TIP", a + T("cancel_selection"), 0)
            }
        }
        cancel_side();
        get_sides()
    }).on("mouseup", "span.selected", function (a) {
    });
    $("#table_anno").mousedown(function (b) {
        if (b.which == 3 || b.which == 1) {
            if (anno.isMouseDown) {
                return
            }
            anno.any_mark_be_clicked = 0;
            var a = T("simple_mode");
            anno.now_item.ranges = [];
            if (anno.work_mode != "simple") {
                a = T("complicated_mode")
            }
            TIP("TIP", T("cancel_selection") + a, 0);
            get_sides();
            cancel_side();
            if (sys.anno_mode == "update") {
                $(".highlight-edit").removeClass("highlight-edit");
                change_back_to_work_mode_before();
                $(".btn-down").removeClass("btn-down");
                $(".btn-down-blue").removeClass("btn-down-blue")
            }
            stat_new();
            updateSysInfo()
        }
        return false
    });
    $("#table_anno span.unit").mousedown(function (c) {
        anno.isMouseDown = true;
        anno.startTagId = this.id;
        var b = this.id.substr(0, 3);
        if (this.id.substr(3).search(/_/i) < 0) {
            var a = parseInt(this.id.substr(3))
        }
        anno.nowSelectedRegion.begin = a;
        $(".highlight-edit").removeClass("highlight-edit");
        change_back_to_work_mode_before()
    }).mouseup(function () {
        get_sides();
        updateSysInfo();
        get_selected_range();
        anno_mode_new();
        var a = T("simple_mode");
        var b = anno.now_item.ranges.length;
        if (anno.work_mode != "simple") {
            a = T("complicated_mode")
        }
        TIP("TIP", a + T("region_selected"), 0)
    }).mousemove(function () {
        var h = this.id;
        var f = anno.startTagId.substr(0, 3);
        if (h.substr(0, 3) != f) {
            return
        }
        if (anno.isMouseDown) {
            var d;
            if (h.substr(3).search(/_/i) < 0) {
                var a = parseInt(h.substr(3))
            }
            var g, e;
            d = anno.nowSelectedRegion.begin;
            g = d;
            e = anno.nowSelectedRegion.lastEnd;
            anno.nowSelectedRegion.end = a;
            if (e == 0) {
                anno.nowSelectedRegion.lastEnd = a;
                if (d > a) {
                    var c = a;
                    a = d;
                    d = c
                }
                for (var b = d; b <= a; b++) {
                    $("#" + f + b).addClass("selected")
                }
            } else {
                anno.nowSelectedRegion.lastEnd = a;
                if (d > a) {
                    var c = a;
                    a = d;
                    d = c
                }
                if (g > e) {
                    var c = e;
                    e = g;
                    g = c
                }
                if (d == g) {
                    if (a > e) {
                        for (var b = e + 1; b <= a; b++) {
                            $("#" + f + b).addClass("selected")
                        }
                    } else {
                        if (a < e) {
                            for (var b = a + 1; b <= e; b++) {
                                $("#" + f + b).removeClass("selected")
                            }
                        }
                    }
                } else {
                    if (a == e) {
                        if (d > g) {
                            for (var b = g; b <= d - 1; b++) {
                                $("#" + f + b).removeClass("selected")
                            }
                        } else {
                            if (d < g) {
                                for (var b = d; b <= g - 1; b++) {
                                    $("#" + f + b).addClass("selected")
                                }
                            }
                        }
                    } else {
                        if (d == e) {
                            for (var b = g; b <= d - 1; b++) {
                                $("#" + f + b).removeClass("selected")
                            }
                            for (var b = d + 1; b <= a; b++) {
                                $("#" + f + b).addClass("selected")
                            }
                        } else {
                            if (a = g) {
                                for (var b = g + 1; b <= e; b++) {
                                    $("#" + f + b).removeClass("selected")
                                }
                                for (var b = d; b <= a - 1; b++) {
                                    $("#" + f + b).addClass("selected")
                                }
                            }
                        }
                    }
                }
            }
            anno_mode_none();
            now_item_null()
        }
        anno.endId = h;
        get_sides();
        updateSysInfo()
    });
    $("#table_anno a.endlink").click(function () {
        var b = $(this).parent().find("span.unit[sid=" + $(this).attr("sid") + "]");
        if (!b.hasClass("selected")) {
            b.addClass("selected");
            get_selected_range();
            anno_mode_new();
            var a = T("simple_mode");
            var c = anno.now_item.ranges.length;
            if (anno.work_mode != "simple") {
                a = T("complicated_mode")
            }
            TIP("TIP", a + T("region_selected"), 0)
        } else {
            b.removeClass("selected");
            anno_mode_none();
            updateSysInfo()
        }
        section()
    }).mouseover(function () {
        $(this).parent().find("span.unit[sid=" + $(this).attr("sid") + "]").addClass("highlight")
    }).mouseout(function () {
        $(this).parent().find("span.unit[sid=" + $(this).attr("sid") + "]").removeClass("highlight")
    });
    $("#table_anno").on("click", "span.mark", function (a) {
        var b = parseInt($(this).attr("err_id"));
        anno.now_err_id = anno.now_mark_id = b;
        anno_mode_update();
        update_now_item("errs", b - 1);
        updateSysInfo();
      popupDelEdit(a);
    }).on("mouseenter", "span.mark", function () {
        var b = parseInt($(this).attr("err_id"));
        anno.now_mark_id = b;
        updateSysInfo();
        var a = anno.annotations.errs[b - 1];
        render_highlight_helper(a, "#table_anno span#uo_", "highlight-tag")
    }).on("mouseleave", "span.mark", function () {
        remove_highlight_helper("#table_anno span.highlight-tag", "highlight-tag")
    });
    $("#table_anno").on("click", "span.mark_mac", function (a) {
        var b = parseInt($(this).attr("err_mac_id"));
        anno.now_mark_mac_id = b;
        anno_mode_update();
        update_now_item("errs_mac", b - 1);
        updateSysInfo();
        popupDelEdit(a);
    }).on("mouseover", "span.mark_mac", function () {
        var b = parseInt($(this).text().replace(/[\[\]]/, ""));
        anno.now_err_mac_id = b;
        updateSysInfo();
        var a = anno.annotations.errs_mac[b - 1];
        render_highlight_helper(a, "#table_anno span#uo_", "highlight-tag-mac")
    }).on("mouseout", "span.mark_mac", function () {
        remove_highlight_helper("#table_anno span.highlight-tag-mac", "highlight-tag-mac")
    });
    $("#table_anno").on("mouseover", "span.mark-ins", function () {
        var b = parseInt($(this).attr("modi_id"));
        anno.now_modi_id = b;
        updateSysInfo();
        var a = anno.annotations.modis[b - 1];
        render_highlight_helper(a, "#table_anno span#uo_", "highlight-tag")
    }).on("mouseout", "span.mark-ins", function () {
        remove_highlight_helper("#table_anno span.highlight-tag", "highlight-tag")
    }).on("click", "span.mark-ins", function (a) {
        var b = parseInt($(this).attr("modi_id"));
        anno.now_modi_id = b;
        anno_mode_update();
        update_now_item("modis", b - 1);
        updateSysInfo();
      popupDelEdit(a);
    });
    $("#table_anno").on("mouseover", "span.mark-sub", function () {
        var b = parseInt($(this).attr("modi_id"));
        anno.now_modi_id = b;
        updateSysInfo();
        var a = anno.annotations.modis[b - 1];
        render_highlight_helper(a, "#table_anno span#uo_", "highlight-tag")
    }).on("mouseout", "span.mark-sub", function () {
        remove_highlight_helper("#table_anno span.highlight-tag", "highlight-tag")
    }).on("click", "span.mark-sub", function (a) {
        var b = parseInt($(this).attr("modi_id"));
        anno.now_modi_id = b;
        anno_mode_update();
        update_now_item("modis", b - 1);
        updateSysInfo();
      popupDelEdit(a);
    });
    $("#table_anno").on("mouseover", "span.mark-del", function () {
        var b = parseInt($(this).attr("modi_id"));
        anno.now_modi_id = b;
        updateSysInfo();
        var a = anno.annotations.modis[b - 1];
        render_highlight_helper(a, "#table_anno span#uo_", "highlight-tag")
    }).on("mouseout", "span.mark-del", function () {
        remove_highlight_helper("#table_anno span.highlight-tag", "highlight-tag")
    }).on("click", "span.mark-del", function (a) {
        var b = parseInt($(this).attr("modi_id"));
        anno.now_modi_id = b;
        anno_mode_update();
        update_now_item("modis", b - 1);
        updateSysInfo();
      popupDelEdit(a);
    });
    $("#table_anno").on("mouseover", "span.mark-good", function () {
        var b = parseInt($(this).attr("eval_id"));
        anno.now_eval_id = b;
        var a = anno.annotations.evals[b - 1];
        render_highlight_helper(a, "#table_anno span#uo_", "highlight-good");
        updateSysInfo()
    }).on("mouseout", "span.mark-good", function () {
        remove_highlight_helper("#table_anno span.highlight-good", "highlight-good")
    }).on("click", "span.mark-good", function (a) {
        var b = parseInt($(this).attr("eval_id"));
        anno.now_eval_id = b;
        anno_mode_update();
        update_now_item("evals", b - 1);
        updateSysInfo();
      popupDelEdit(a);
    });
    $("#table_anno ").on("mouseover", "span.mark-bad", function () {
        var b = parseInt($(this).attr("eval_id"));
        anno.now_eval_id = b;
        var a = anno.annotations.evals[b - 1];
        render_highlight_helper(a, "#table_anno span#uo_", "highlight-bad");
        updateSysInfo()
    }).on("mouseout", "span.mark-bad", function () {
        remove_highlight_helper("#table_anno span.highlight-bad", "highlight-bad")
    }).on("click", "span.mark-bad", function (a) {
        var b = parseInt($(this).attr("eval_id"));
        anno.now_eval_id = b;
        anno_mode_update();
        update_now_item("evals", b - 1);
        updateSysInfo();
      popupDelEdit(a);
    });
    $("#table_anno ").on("mouseover", "span.mark-question", function () {
        var b = parseInt($(this).attr("eval_id"));
        anno.now_eval_id = b;
        updateSysInfo();
        var a = anno.annotations.evals[b - 1];
        render_highlight_helper(a, "#table_anno span#uo_", "highlight-question")
    }).on("mouseout", "span.mark-question", function () {
        remove_highlight_helper("#table_anno span.highlight-question", "highlight-question")
    }).on("click", "span.mark-question", function (a) {
        var b = parseInt($(this).attr("eval_id"));
        anno.now_eval_id = b;
        anno_mode_update();
        update_now_item("evals", b - 1);
        updateSysInfo();
      popupDelEdit(a);
    });
    $("#table_anno ").on("click", "span.line_err, span.line_err_mac, span.line_ins, span.line_sub, span.line_del", function () {
    });
    render_errs();
    render_modis();
    render_evals()
}

function a(b) {
  switch (b) {
    case 0:
    case 1:
    case 2:
      $('.anno-popover[rid=1]').show();
      break;
    case 9:
    case 7:
    case 3:
      $('.anno-popover[rid=2]').show();
      break;
    case 8:
    case 10:
    case 4:
      $('.anno-popover[rid=3]').show();
      break;
    case 5:
    case 6:
    case 11:
      $('.anno-popover[rid=4]').show();
      break;
    default:
      $('.anno-popover[rid=1]').show()
  }
  switch (b) {
    case 0:
    case 9:
    case 8:
    case 5:
      $('.arrow').css('left', '50px');
      break;
    case 1:
    case 7:
    case 10:
    case 6:
      $('.arrow').css('left', '150px');
      break;
    case 2:
    case 3:
    case 4:
    case 11:
      $('.arrow').css('left', '260px');
      break;
    default:
      $('.arrow').css('left', '50px')
  }
}

function popupDelEdit(event) {
  $("#popupDelEdit").popup("open", {x: event.pageX + 110, y: event.pageY + 50, transition: "flip"})
  //
  // var e = anno.now_item.type;
  // switch (e) {
  //   case 'error':
  //     turn_to_complicated_mode();
  //     $('#anno-panel-middle').hide();
  //     $('.content_anno_custom').val(anno.now_item.notes);
  //     var c = anno.annotations.errs[anno.now_err_id - 1];
  //     render_highlight_helper(c, '#table_anno span#uo_', 'highlight-edit');
  //     var d = anno.now_item.id;
  //     taggers.now_item = taggers.annos_errs.items[d];
  //     $('.anno_err[err_tid=' + d + ']').addClass('btn-down');
  //     if ($('.mombomenu').length > 0) {
  //       $('.mombomenu').remove()
  //     }
  //     if ($('.mombobutton').length > 0) {
  //       $('.mombobutton').remove()
  //     }
  //     taggers.now_item = taggers.annos_errs.items[d];
  //     var b = taggers.annos_errs.items[d].annos;
  //     $('.content_anno_custom').momboBox({
  //       data: b
  //     });
  //     a(d);
  //     $("#composition").popup("open", {x: event.pageX - 80, y: event.pageY + 80, transition: "flip"})
  //     break;
  //   case 'error_machine':
  //     turn_to_complicated_mode();
  //     $('#anno-panel-middle').hide();
  //     $('.content_anno_custom').val(anno.now_item.notes);
  //     var c = anno.annotations.errs_mac[anno.now_err_mac_id - 1];
  //     render_highlight_helper(c, '#table_anno span#uo_', 'highlight-edit');
  //     $('.anno_err[err_tid=0]').addClass('btn-down');
  //     a(0);
  //     $("#composition").popup("open", {x: event.pageX - 80, y: event.pageY + 80, transition: "flip"})
  //     break;
  //   case 'sub':
  //     turn_to_complicated_mode();
  //     $('#anno-panel-detail-anno').hide();
  //     $('#anno-panel-save-cancel').hide();
  //     $('.cancel_action').show();
  //     $('#wrap_ins').hide();
  //     $('#btn_del_a_anno').hide();
  //     $('#content_sub').val(anno.now_item.notes);
  //     var c = anno.annotations.modis[anno.now_modi_id - 1];
  //     render_highlight_helper(c, '#table_anno span#uo_', 'highlight-edit');
  //     $('#btn_sub_a_anno').addClass('btn-down-blue');
  //     $("#composition").popup("open", {x: event.pageX - 80, y: event.pageY + 80, transition: "flip"})
  //     break;
  //   case 'ins':
  //     turn_to_complicated_mode();
  //     $('#anno-panel-detail-anno').hide();
  //     $('#anno-panel-save-cancel').hide();
  //     $('#anno-panel-bottom').hide();
  //     $('.cancel_action').show();
  //     $('#wrap_sub').hide();
  //     $('#btn_del_a_anno').hide();
  //     if (anno.now_item.ins_direction == 'before') {
  //       $('#content_ins_before').val(anno.now_item.notes);
  //       $('#content_ins_after').textinput('disable')
  //     } else {
  //       $('#content_ins_after').val(anno.now_item.notes);
  //       $('#content_ins_before').textinput('disable')
  //     }
  //     var c = anno.annotations.modis[anno.now_modi_id - 1];
  //     render_highlight_helper(c, '#table_anno span#uo_', 'highlight-edit');
  //     $('#btn_ins_a_anno').addClass('btn-down-blue');
  //     $("#composition").popup("open", {x: event.pageX - 80, y: event.pageY + 80, transition: "flip"})
  //     break;
  //   case 'del':
  //     return false;
  //     break;
  //   case 'good':
  //     //$('.sentenceComment_background').show();
  //     $('.sentenceComment_background').modal('show')
  //     $('.sentenceComment_input').attr('id', 'sentenceComment_input' + anno.now_eval_id);
  //     $('.sentenceComment_input').val(anno.now_item.notes);
  //     $('.sentenceComment_input').show();
  //     $("#popupDelEdit").popup("open", {x: event.pageX + 110, y: event.pageY + 50, transition: "flip"})
  //     break;
  //   case 'question':
  //     //$('.sentenceComment_background').show();
  //     $('.sentenceComment_background').modal('show')
  //     $('.sentenceComment_input').attr('id', 'sentenceComment_input' + anno.now_eval_id);
  //     $('.sentenceComment_input').val(anno.now_item.notes);
  //     $('.sentenceComment_input').show();
  //     $("#popupDelEdit").popup("open", {x: event.pageX + 110, y: event.pageY + 50, transition: "flip"})
  //     break;
  //   default:
  //     break
  // }

  // $('.sentenceComment_input').focus();


}


function cancel_all() {
    $("#table_anno span.selected").removeClass("selected");
    $(".stu_anno span.selected").removeClass("selected")
}
function clear_all_errs() {
    cancel_all();
    $("#table_anno span.line1").removeClass("line1");
    $("#table_anno span.line2").removeClass("line2");
    $("#table_anno span.line_err").removeClass("line_err");
    $("#table_anno span.mark").remove()
}
function clear_all_errs_stu() {
    cancel_all();
    $("#table_anno span.line1").removeClass("line1");
    $("#table_anno span.line2").removeClass("line2");
    $("#table_anno span.line_err").removeClass("line_err");
    $("#table_anno span.mark").remove()
}
function clear_all_modis() {
    cancel_all();
    $("#table_anno span.line_sub").removeClass("line_sub");
    $("#table_anno span.line_ins").removeClass("line_ins");
    $("#table_anno span.line_del").removeClass("line_del");
    $("#table_anno span.mark-sub").remove();
    $("#table_anno span.mark-ins").remove();
    $("#table_anno span.mark-del").remove();
    $(".qtip").remove()
}
function clear_all_modis_stu() {
    cancel_all();
    $("#table_anno span.line_sub").removeClass("line_sub");
    $("#table_anno span.line_ins").removeClass("line_ins");
    $("#table_anno span.line_del").removeClass("line_del");
    $("#table_anno span.mark-sub").remove();
    $("#table_anno span.mark-ins").remove();
    $("#table_anno span.mark-del").remove();
    $(".qtip").remove()
}
function clear_all_evals() {
    cancel_all();
    $("#table_anno span.eval-good").removeClass("eval-good");
    $("#table_anno span.eval-bad").removeClass("eval-bad");
    $("#table_anno span.eval-que").removeClass("eval-que");
    $("#table_anno span.mark-good").remove();
    $("#table_anno span.mark-bad").remove();
    $("#table_anno span.mark-question").remove()
}
function clear_errs_mac() {
    cancel_all();
    $("#table_anno span.line_err_mac").removeClass("line_err_mac");
    $("#table_anno span.mark_mac").remove()
}
//
// function clone(obj){
//     var copy;
//     switch(typeof obj){
//         case 'undefined':break;
//         case 'number':
//         case 'string':
//         case 'boolean':copy = obj;break;
//         case 'object':
//             if(obj == null) copy = null;
//             else if(toString.apply(obj) === '[object Array]')
//             {
//                 copy = [];
//                 for(var i in obj) copy.push(clone(obj[i]));
//             }
//             else
//             {
//                 copy = {};
//                 for(var j in obj)
//                     copy[j]= clone(obj[j]);
//             }
//     }
//     return copy;
// }

function render_errs() {
    if (!anno.annotations.errs) {
        return
    }
    for (var b = 1; b <= anno.annotations.errs.length; b++) {
        var a = $clone(anno.annotations.errs[b - 1]);
        anno.now_item = a;
        switch (anno.now_item.type) {
            case"error":
                init_line_err(b);
                break;
            default:
                init_line_err(b);
                break
        }
        cancel_side()
    }
}
function render_errs_mac() {
    if (!anno.annotations.errs_mac) {
        return
    }
    for (var b = 1; b <= anno.annotations.errs_mac.length; b++) {
        var a = $clone(anno.annotations.errs_mac[b - 1]);
        anno.now_item = a;
        switch (anno.now_item.type) {
            case"error_machine":
                init_line_err_mac(b);
                break;
            default:
                init_line_err_mac(b);
                break
        }
        cancel_side()
    }
}
function render_modis() {
    if (!anno.annotations.modis) {
        return
    }
    var d = anno.annotations.modis.length;
    for (var g = 1; g <= d; g++) {
        var c = $clone(anno.annotations.modis[g - 1]);
        anno.now_item = c;
        var e = $("#table_anno .paragraph-o span.unit").filter(function (h) {
            return is_in_range(h + 1, anno.now_item.ranges)
        });
        switch (anno.now_item.type) {
            case"del":
                add_tag_line(e, 4);
                var f = $('<span class="mark-del"/>').text("[x]").attr("title", T("extra"));
                f.attr("modi_id", g);
                f.attr("modi_tid", anno.now_item.id);
                e.filter(":last").after(f);
                break;
            case"sub":
                add_tag_line(e, 5);
                var b = $('<span class="mark-sub"/>').text("|").attr("title", anno.now_item.notes);
                var a = $('<span class="mark-sub"/>').text("|_").attr("title", anno.now_item.notes);
                b.attr("modi_id", g + "_left");
                a.attr("modi_id", g);
                a.attr("modi_tid", anno.now_item.id);
                e.filter(":first").before(b);
                e.filter(":last").after(a);
                $("span[modi_id=" + g + "_left]").qtip({
                    content: anno.now_item.note,
                    position: {my: "bottom left", at: "top left", adjust: {x: -4, y: 14}},
                    style: {classes: "qtip-red qtip-red-my"},
                    show: {ready: true},
                    hide: false
                });
                break;
            case"ins":
                add_tag_line(e, 6);
                var f = $('<span class="mark-ins"/>').text(T("ins_mark")).attr("title", anno.now_item.notes);
                f.attr("modi_id", g);
                f.attr("modi_tid", anno.now_item.id);
                if (anno.now_item.ins_direction == "before") {
                    e.filter(":first").before(f);
                    $("span[modi_id=" + g + "]").qtip({
                        content: anno.now_item.note,
                        position: {my: "bottom middle", at: "top left", adjust: {x: 7, y: 14}},
                        style: {classes: "qtip-red qtip-red-my"},
                        show: {ready: true},
                        hide: false
                    })
                } else {
                    if (anno.now_item.ins_direction == "after") {
                        e.filter(":last").after(f);
                        $("span[modi_id=" + g + "]").qtip({
                            content: anno.now_item.note,
                            position: {my: "bottom middle", at: "top left", adjust: {x: 7, y: 14}},
                            style: {classes: "qtip-red-my qtip-red"},
                            show: {ready: true},
                            hide: false
                        })
                    } else {
                    }
                }
                break;
            default:
                break
        }
    }
}
function render_evals() {
    if (!anno.annotations.evals) {
        return
    }
    var e = anno.annotations.evals.length;
    for1 : for (var d = 1; d <= e; d++) {
        var a = $clone(anno.annotations.evals[d - 1]);
        anno.now_item = a;
        var b = $("#table_anno .paragraph-o span.unit").filter(function (f) {
            return is_in_range(f + 1, anno.now_item.ranges)
        });
        switch (anno.now_item.type) {
            case"good":
                add_tag_line(b, 1);
                // var c = $('<span class="mark-good"/>').append('<i class="icon-thumbs-up" style="position: relative;"></i>')
                var c = $('<span class="mark-good"/>').append('<img src="img/good.png" style="height: 20px;" alt="' + T("good_") + '"/>').attr("title", anno.now_item.notes+" | "+T("good_"));
                break;
            case"bad":
                add_tag_line(b, 2);
                var c = $('<span class="mark-bad"/>').append('<img src="img/bad.png" style="height: 20px;" alt="' + T("bad_") + '"/>').attr("title", T("bad_"));
                break;
            case"question":
                add_tag_line(b, 3);
                //  <i class="icon-question-sign" style="position: relative;top: -2px;left: -2px;"></i>çé¾é®é¢
                var c = $('<span class="mark-question"/>').append('<img src="img/question.png" style="height:18px;" alt="' + T("question") + '"/>').attr("title", anno.now_item.notes+" | "+T("question_"));
                // var c = $('<span class="mark-question"/>').append('<i class="icon-question-sign" style="position: relative;"></i>')
                break;
            default:
                continue for1;
        }
        c.attr("eval_id", d);
        c.attr("eval_tid", anno.now_item.id);
        b.filter(":last").after(c)
    }
}
function init_line_err(e) {
    var d = $("#table_anno .paragraph-o span.unit").filter(function (f) {
        return is_in_range(f + 1, anno.now_item.ranges)
    });
    var c = "";
    var b = "";
    var a = "";
    if (anno.now_item.notes && anno.now_item.notes != "") {
        c = anno.now_item.notes
    }
    if (anno.now_item.name_zh && anno.now_item.name_zh != "") {
        b = anno.now_item.name_zh
    }
    if (anno.now_item.abbr && anno.now_item.abbr != "") {
        a = anno.now_item.abbr
    }
    add_tag_line(d);
    mark = $('<span class="mark"/>').text("[" + e + "]").attr("title", c + " | " + b);
    mark.attr("err_id", e);
    mark.attr("err_tid", anno.now_item.id);
    d.filter(":last").after(mark)
}
function init_line_err_mac(e) {
    var d = $("#table_anno .paragraph-o span.unit").filter(function (f) {
        return is_in_range(f + 1, anno.now_item.ranges)
    });
    var c = "";
    var b = "";
    var a = "";
    var colorStyle="#20A0FF"
    if (anno.now_item.notes && anno.now_item.notes != "") {
        c = anno.now_item.notes
    }
    if (anno.now_item.name_zh && anno.now_item.name_zh != "") {
        b = anno.now_item.name_zh
    }
    if (anno.now_item.abbr && anno.now_item.abbr != "") {
        a = anno.now_item.abbr
    }
    // if(e==1){
    //     colorStyle="#20A0FF"
    // }
    // if(e==2){
    //     colorStyle="#FFA200"
    // }
    // if(e==3){
    //     colorStyle="#20A0FF"
    // }
    // if(e==4){
    //     colorStyle="#57D600"
    // }
    colorStyle=setBallColor(anno.now_item.name_zh)
    add_tag_line(d, 7);
    mark = $('<span class="mark_mac" style="background:'+colorStyle+'"/>').text( e ).attr("title", c + " | " + b + " | " + a);
    mark.attr("err_mac_id", e);
    mark.attr("err_mac_tid", anno.now_item.id);
    d.filter(":last").after(mark)
}
function add_tag_line(b, a) {
    var a = a || 0;
    if (a == 1) {
        if (!b.hasClass("eval-good")) {
            b.addClass("eval-good")
        }
    } else {
        if (a == 2) {
            if (!b.hasClass("eval-bad")) {
                b.addClass("eval-bad")
            }
        } else {
            if (a == 3) {
                if (!b.hasClass("eval-que")) {
                    b.addClass("eval-que")
                }
            } else {
                if (a == 4) {
                    if (!b.hasClass("line_del")) {
                        b.addClass("line_del")
                    }
                } else {
                    if (a == 5) {
                        if (!b.hasClass("line_sub")) {
                            b.addClass("line_sub")
                        }
                    } else {
                        if (a == 6) {
                            if (!b.hasClass("line_ins")) {
                                b.addClass("line_ins")
                            }
                        } else {
                            if (a == 7) {
                                if (!b.hasClass("line_err_mac")) {
                                    b.addClass("line_err_mac")
                                }
                            } else {
                                if (!b.hasClass("line1")) {
                                    b.addClass("line1")
                                } else {
                                    if (b.hasClass("line1") && !b.hasClass("line2")) {
                                        b.addClass("line2")
                                    } else {
                                        if (b.hasClass("line1") && b.hasClass("line2") && !b.hasClass("line_err")) {
                                            b.addClass("line_err")
                                        } else {
                                            b.addClass("line_err")
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
function render_highlight_helper(m, h, n) {
    if (!m) {
        return
    }
    var c = m.ranges;
    var a = c.length;
    for (var f = 0; f < a; f++) {
        var g = c[f];
        var l = parseInt(g.begin);
        var k = parseInt(g.end);
        for (var d = l; d <= k; d++) {
            $(h + d).addClass(n)
        }
    }
}
function remove_highlight_helper(b, a) {
    $(b).removeClass(a)
}
function section() {
    var a = [];
    var b = $("#table_anno .paragraph-o span.selected");
    if (!b.attr("id")) {
        return false
    }
    anno.sections = 2;
    a = _get_range_sets(b);
    if (a.length == 1) {
        anno.sections = 1
    }
    if (anno.sections == 1) {
        $("#table_both span.selected:first").before("<em style='color:#ff0000;' id='mark_start'>*</em>");
        $("#table_both span.selected:last").after("<em style='color:#ff0000;' id='mark_end'>*</em>")
    } else {
        if (anno.sections == 2) {
            $("em").remove()
        }
    }
}
function _get_id(a) {
    return parseInt(a.attr("id").split("_")[1])
}
function sortfunc(d, c) {
    return d - c
}
function sortfuncnew(d, c) {
    return parseInt(d.split("_")[1]) - parseInt(c.split("_")[1])
}
function is_in_range(a, b) {
    for (var c = 0; c < b.length; c++) {
        var d = b[c];
        if (a >= d.begin && a <= d.end) {
            return true
        }
    }
    return false
}
function get_selected_range() {
    var a = [];
    var b = $("#table_anno .paragraph-o span.selected");
    a = _get_range_sets(b);
    anno.now_item.ranges = a
}
function _get_range_sets(f) {
    var e = f.length;
    var d = [];
    if (e == 0) {
        return []
    } else {
        if (f[0].id.split("_").length == 3) {
            for (var c = 0; c < e; c++) {
                if (f[c].id && f[c].id.split("_").length > 1) {
                    d.push(parseInt(f[c].id.split("_")[2]))
                }
            }
        } else {
            for (var c = 0; c < e; c++) {
                if (f[c].id && f[c].id.split("_").length > 1) {
                    d.push(parseInt(f[c].id.split("_")[1]))
                }
            }
        }
    }
    var b = d.length;
    if (b == 0) {
        return []
    }
    d.sort(sortfunc);
    var a = [];
    cur = begin = end = d[0];
    while (d.indexOf(cur) != -1) {
        if (d.indexOf(cur + 1) != -1) {
            cur++
        } else {
            end = cur;
            a.push({begin: begin, end: end});
            cur_index = d.indexOf(cur);
            if (cur_index == b - 1) {
                break
            } else {
                begin = cur = d[cur_index + 1]
            }
        }
    }
    return a
}
function _get_ranges(g) {
    var f = g.length;
    var e = [];
    var d = null;
    if (f == 0) {
        return false
    } else {
        d = g[0].id.split("_")[1];
        for (var c = 0; c < f; c++) {
            if (d != g[c].id.split("_")[1]) {
                return false
            }
            if (g[c].id && g[c].id.split("_").length > 1) {
                e.push(g[c].id.split("_")[1] + "_" + g[c].id.split("_")[2])
            }
        }
    }
    var b = e.length;
    if (b == 0) {
        return false
    }
    e.sort(sortfuncnew);
    var a = [];
    cur = begin = end = e[0];
    while (e.indexOf(cur) != -1) {
        next = cur.split("_")["0"] + "_" + (parseInt(cur.split("_")["1"]) + 1);
        if (e.indexOf(next) != -1) {
            cur = next
        } else {
            end = cur;
            a.push({begin: begin, end: end});
            cur_index = e.indexOf(cur);
            if (cur_index == b - 1) {
                break
            } else {
                begin = cur = e[cur_index + 1]
            }
        }
    }
    if (a.length == 1) {
        anno.sections = 1
    }
}
function stat_new() {
    $("#table_anno span.selected").removeClass("selected");
    sys.anno_mode = "none"
}
function check_anno_mode() {
  sys.anno_mode = "new"
  return 1;
    // if (sys.anno_mode == "new" || sys.anno_mode == "update" || sys.anno_mode == "delete") {
    //     return 1
    // } else {
    //     console.log(sys.anno_mode);
    //     TIP("ERROR", T("no_select_region"), 0);
    //     $(document).click();
    //     return 0
    // }
}
function update_tag_type_info(a, c, d) {
    var b = taggers[a].items[d];
    anno.now_item.id = b[c];
    anno.now_item.type = b.type;
    anno.now_item.name = b.name;
    anno.now_item.name_zh = b.name_zh;
    anno.now_item.abbr = b.abbr;
    anno.now_item.notes = b.annos[0]
}
function update_now_item(b, c) {
    var a = $clone(anno.annotations[b][c]);
    anno.now_item = a
}
/**
 * èªå®ä¹éè¯¯
 * @param {*} ranges 
 */
function add_an_anno_sent(itemType, itemId, itemIndex, ranges) {
    update_tag_type_info(itemType, itemId, itemIndex);
    anno.now_item.ranges = ranges//[{begin: begin, end: end}]
    anno.line_type = "line_err";
    anno.now_item.id = getMaxSentId()+1
    var a = $clone(anno.now_item);
    //æ·»å éè¯¯
    anno.annotations.sents.push(a);
    stat_new();
    anno.isModify = true;
    updateSysInfo();
}
function getMaxSentId(){
    if(!anno.annotations.sents){
        anno.annotations.sents=[]
        return 0
    }
    var l = anno.annotations.sents.length
    if(l==0){
        return 0;
    }else{
        return anno.annotations.sents[l-1].id
    }
}
function update_now_sent(b,sent,key,value) {
    for(var index in anno.annotations[b]){
        if(anno.annotations[b][index].id==sent.id){
            anno.annotations[b][index][key] = value
            break;
        }
    }
}
function delete_now_sent(b,id) {
    for(var index in anno.annotations[b]){
        if(anno.annotations[b][index].id==id){
            anno.annotations[b].splice(index,1)
            break;
        }
    }

}
function get_now_sent(b, id) {
    for(var index in anno.annotations[b]){
        if(anno.annotations[b][index].id==id){
            var a = $clone(anno.annotations[b][index]);
            anno.now_item = a
            break;
        }
    }
    var clone = $clone(anno.annotations[b])
    anno.annotations[b] = clone.sort(function (a,b){
        return a.id-b.id
    })
}

function now_item_null() {
    anno.now_item.name = "";
    anno.now_item.name_zh = "";
    anno.now_item.id = null;
    anno.now_item.type = "";
    anno.now_item.notes = "";
    anno.now_item.abbr = "";
    anno.now_item.op = "none";
    anno.now_item.del = null;
    anno.now_item.ins = null;
    anno.now_item.sub = null;
    anno.now_item.ins_direction = null;
    anno.now_item.sub_content = null;
    anno.now_item.ranges = [];
    anno.now_mark_id = null;
    anno.now_err_id = null;
    anno.now_modi_id = null;
    anno.now_eval_id = null;
    anno.now_err_mac_id = null
}
function anno_mode_none() {
    sys.anno_mode = "none"
}
function anno_mode_new() {
    sys.anno_mode = "new"
}
function anno_mode_update() {
    sys.anno_mode = "update"
}
function add_an_anno() {
    if ($("#table_anno span.selected").size() == 0) {
        return
    }
    get_selected_range();
    var e = $("#table_anno .paragraph-o span.selected");
    add_tag_line(e);
    anno.line_type = "line_err";
    var a = $clone(anno.now_item);
    anno.annotations.errs.push(a);
    var g = "";
    var d = "";
    var c = "";
    var b = anno.now_item.id;
    if (anno.now_item.notes && anno.now_item.notes != "") {
        g = anno.now_item.notes
    }
    if (anno.now_item.name && anno.now_item.name != "") {
        d = anno.now_item.name_zh
    }
    if (anno.now_item.abbr && anno.now_item.abbr != "") {
        c = anno.now_item.abbr
    }
    var colorStyle=setTrFlagColor(b)
    var f = $('<span style="color:'+colorStyle+'" class="mark" err_tid="' + b + '" title ="' + g + "  |  " + d + '">[' + anno.annotations.errs.length + "]</span>");
    f.attr("err_id", anno.annotations.errs.length);
    $("#table_anno .paragraph-o span.selected:last").after(f);
    stat_new();
    anno.isModify = true;
    TIP("TIP", T("success_add_anno_err"), 0);
    updateSysInfo();
    $("#btn_anno_custom").val("")
}
function add_an_anno_simple() {
    if ($("#table_anno span.selected").size() == 0) {
        return
    }
    get_selected_range();
    var e = $("#table_anno .paragraph-o span.selected");
    add_tag_line(e);
    anno.line_type = "line_err";
    var a = $clone(anno.now_item);
    anno.annotations.errs.push(a);
    var g = "";
    var d = "";
    var c = "";
    var b = anno.now_item.id;
    if (anno.now_item.notes && anno.now_item.notes != "") {
        g = " "
    }
    if (anno.now_item.name && anno.now_item.name != "") {
        d = anno.now_item.name_zh
    }
    if (anno.now_item.abbr && anno.now_item.abbr != "") {
        c = anno.now_item.abbr
    }
    var colorStyle=setTrFlagColor(anno.now_item.id)
    // style="background:'+colorStyle+'
    var f = $('<span style="color:'+colorStyle+'" class="mark" err_tid="' + b + '" title ="' + g + "  |  " + d + '">[' + anno.annotations.errs.length + "]</span>");
    f.attr("err_id", anno.annotations.errs.length);
    $("#table_anno .paragraph-o span.selected:last").after(f);
    stat_new();
    anno.isModify = true;
    TIP("TIP", T("success_add_anno_err"), 0);
    updateSysInfo();
    $("#btn_anno_custom").val("")
}

function add_a_note() {
}
function add_a_modi() {
    if ($("#table_anno span.selected").size() == 0) {
        return
    }
    get_selected_range();
    var e = $("#table_anno .paragraph-o span.selected");
    var d = anno.now_item.id;
    var g = anno.annotations.modis.length + 1;
    switch (anno.now_item.type) {
        case"del":
            add_tag_line(e, 4);
            var f = $('<span class="mark-del"/>').text("[x]").attr("title", T("extra"));
            f.attr("modi_id", g);
            f.attr("modi_tid", d);
            e.filter(":last").after(f);
            TIP("TIP", T("success_add_anno_sub"), 0);
            break;
        case"sub":
            anno.now_item.notes = $("#content_sub").val();
            add_tag_line(e, 5);
            var c = $('<span class="mark-sub"/>').text("|").attr("title", anno.now_item.notes);
            var a = $('<span class="mark-sub"/>').text("|_").attr("title", anno.now_item.notes);
            c.attr("modi_id", g + "_left");
            a.attr("modi_id", g);
            a.attr("modi_tid", d);
            e.filter(":first").before(c);
            e.filter(":last").after(a);
            $("span[modi_id=" + g + "_left]").qtip({
                content: anno.now_item.note,
                position: {my: "bottom left", at: "top left", adjust: {x: -4, y: 14}},
                style: {classes: "qtip-red qtip-red-my"},
                show: {ready: true},
                hide: false
            });
            $("#content_sub").val("");
            TIP("TIP", T("success_add_anno_sub"), 0);
            break;
        case"ins":
            add_tag_line(e, 6);
            var f = $('<span class="mark-ins"/>').attr("modi_id", g).attr("modi_tid", d);
            if (anno.now_item.ins_direction == "before") {
                anno.now_item.notes = $("#content_sub").val();
                f.text(T("ins_mark")).attr("title", anno.now_item.notes);
                e.filter(":first").before(f);
                $("span[modi_id=" + g + "]").qtip({
                    content: anno.now_item.note,
                    position: {my: "bottom middle", at: "top left", adjust: {x: 7, y: 14}},
                    style: {classes: "qtip-red qtip-red-my"},
                    show: {ready: true},
                    hide: false
                });
                TIP("TIP", T("success_add_anno_ins_b"), 0)
            } else {
                if (anno.now_item.ins_direction == "after") {
                    anno.now_item.notes = $("#content_sub").val();
                    f.text(T("ins_mark")).attr("title", anno.now_item.notes);
                    e.filter(":last").after(f);
                    $("span[modi_id=" + g + "]").qtip({
                        content: anno.now_item.note,
                        position: {my: "bottom middle", at: "top left", adjust: {x: 7, y: 14}},
                        style: {classes: "qtip-red-my qtip-red"},
                        show: {ready: true},
                        hide: false
                    });
                    TIP("TIP", T("success_add_anno_ins_a"), 0)
                } else {
                }
            }
            $("#content_in_before").val("");
            $("#content_in_after").val("");
            break;
        default:
            break
    }
    var b = $clone(anno.now_item);
    anno.annotations.modis.push(b);
    stat_new();
    anno.isModify = true;
    updateSysInfo();
    $("#content_sub").val("");
    $("#content_ins_before").val("");
    $("#content_ins_after").val("")
}
function add_an_ins() {
}
function add_a_sub() {
}
function add_a_del() {
}
function add_an_eval() {
    if ($("#table_anno span.selected").size() == 0) {
        return
    }
    get_selected_range();
    var c = $("#table_anno .paragraph-o span.selected");
    var a = $clone(anno.now_item);
    anno.annotations.evals.push(a);
    var b = anno.now_item.id;
    switch (anno.now_item.type) {
        case"good":
            add_tag_line(c, 1);
            anno.line_type = "eval-good";
            // var d = $('<span class="mark-good"/>').append('<i class="icon-thumbs-up" style="position: relative;"></i>')

            var d = $('<span class="mark-good"/>').append('<img src="img/good.png" style="height: 20px;" alt="' + T("good_") + '"/>').attr("title", a.notes+" | "+T("good_"));
            break;
        case"question":
            add_tag_line(c, 3);
            anno.line_type = "eval-que";
            var d = $('<span class="mark-question"/>').append('<img src="img/question.png" style="height: 18px;" alt="' + T("question") + '"/>').attr("title", a.notes+" | "+T("question_"));
            // var d = $('<span class="mark-question"/>').append('<i class="icon-question-sign" style="position: relative;"></i>')

            break;
        default:
            break
    }
    anno.now_eval_id = anno.annotations.evals.length;
    d.attr("eval_id", anno.annotations.evals.length);
    d.attr("eval_tid", b);
    c.filter(":last").after(d);
    stat_new();
    anno.isModify = true;
    TIP("TIP", T("success_add_anno_eval"), 0);

    //è·å¾å½åç¹èµ/å­ççå¥å­ï¼å¹¶å°å¥å­æ·»å å°æåçç¡®è®¤åäº«çå¼¹åºçªå£ä¸­
	var sentenceLength = c.length ;
	var sentence ="";
	for(i=0;i<sentenceLength;i++){
      sentence = sentence+c[i].innerHTML;
	}
	sentence=sentence.replace(/(^\s*)|(\s*$)/g, "");
	if(anno.now_item.type=="good"){
		$("#show_recommended_sentences").append("<div id=text_id_"+anno.annotations.evals.length+" class= text_id_"+anno.annotations.evals.length+"><table><tr><td style=width:25px;vertical-align:top;padding-top:2px;><input type=checkbox  name=recommened_sentence value='"+sentence.replace(/\'/ig,"&quot")+"' checked /></td><td>"+sentence+"&nbsp;&nbsp;<img id=commentIcon src=img/commentIcon.png onclick=showOrHideSenCom(this) /></td></tr></table></div>");
	}
	else if((anno.now_item.type=="question")){
		$("#show_questioned_sentences").append("<div id=text_id_"+anno.annotations.evals.length+" class= text_id_"+anno.annotations.evals.length+"><table><tr><td style=width:25px;vertical-align:top;padding-top:2px; width=25px><input type=checkbox name=questioned_sentence value='"+sentence.replace(/\'/ig,"&quot")+"' checked /></td><td>"+sentence+"&nbsp;&nbsp;<img id=commentIcon src=img/commentIcon.png onclick=showOrHideSenCom(this) /></td></tr></table></div>");
	}
	else{}
	//$(".sentenceComment_background").show();
	$('.sentenceComment_background').modal('show')
	$(".sentenceComment_input").attr('id','sentenceComment_input'+anno.annotations.evals.length);
	$(".sentenceComment_input").val("");
	$(".sentenceComment_input").show();
	$(".sentenceComment_input").focus();
	//è·å¾å½åç¹èµ/å­ççå¥å­ï¼å¹¶å°å¥å­æ·»å å°æåçç¡®è®¤åäº«çå¼¹åºçªå£ä¸­--ç»æ
    updateSysInfo()
}
function update_an_anno() {
    var e = anno.now_err_id;
    var c = anno.now_item.id;
    var b = anno.now_item.name_zh;
    var a = anno.now_item.abbr;
    var d = anno.now_item.notes;
    if (d && d != "") {
        anno.annotations.errs[e - 1].notes = d
    }
    anno.annotations.errs[e - 1].id = c;
    anno.annotations.errs[e - 1].abbr = a;
    anno.annotations.errs[e - 1].name_zh = b;
    clear_all_errs();
    render_errs();
    stat_new();
    TIP("TIP", T("success_update_anno"), 0)
}
function update_a_sub() {
    var b = anno.now_modi_id;
    var a = $("#content_sub").val();
    if (a && a != "") {
        anno.annotations.modis[b - 1].notes = a
    }
    clear_all_modis();
    render_modis();
    stat_new();
    TIP("TIP", T("success_update_sub"), 0)
}
function update_a_ins() {
    var c = anno.now_modi_id;
    var a = anno.now_item.ins_direction;
    var b = $("#content_ins_" + a).val();
    if (b && b != "") {
        anno.annotations.modis[c - 1].notes = b
    }
    clear_all_modis();
    render_modis();
    stat_new();
    TIP("TIP", T("success_update_ins"), 0)
}
function update_an_eval() {
	var e = anno.now_eval_id;
    var c = anno.now_item.id;
    var b = anno.now_item.name_zh;
    var a = anno.now_item.abbr;
    var d = anno.now_item.notes;
    if (d && d != "") {
        anno.annotations.evals[e - 1].notes = d;
    }
    anno.annotations.evals[e - 1].id = c;
    anno.annotations.evals[e - 1].abbr = a;
    anno.annotations.evals[e - 1].name_zh = b;
    clear_all_evals();
	render_evals();
    stat_new();
    TIP("TIP", T("success_update_eval"), 0)
}
function transfer_an_anno() {
    anno.now_item.type = "error";
    var e = $("#table_anno .paragraph-o span.unit").filter(function (h) {
        return is_in_range(h + 1, anno.now_item.ranges)
    });
    add_tag_line(e);
    anno.line_type = "line_err";
    var a = $clone(anno.now_item);
    anno.annotations.errs.push(a);
    var g = "";
    var d = "";
    var c = "";
    var b = anno.now_item.id;
    if (anno.now_item.notes && anno.now_item.notes != "") {
        g = anno.now_item.notes
    }
    if (anno.now_item.name && anno.now_item.name != "") {
        d = anno.now_item.name_zh
    }
    if (anno.now_item.abbr && anno.now_item.abbr != "") {
        c = anno.now_item.abbr
    }
    var colorStyle=setTrFlagColor(anno.now_item.id)
    var f = $('<span style="color:'+colorStyle+'" class="mark" err_tid="' + b + '" title ="' + g + "  |  " + d + '">[' + anno.annotations.errs.length + "]</span>");
    f.attr("err_id", anno.annotations.errs.length);
    e.filter(":last").after(f);
    stat_new();
    anno.isModify = true;
    updateSysInfo();
    del_an_anno_mac();
    TIP("TIP", T("success_transfer_anno"), 0);
    $("#btn_anno_custom").val("")
}
function del_an_anno() {
    clear_all_errs();
    anno.annotations.errs.splice(anno.now_err_id - 1, 1);
    render_errs();
    anno.isModify = true;
    TIP("TIP", T("success_del_anno"), 0)
}
function del_an_anno_mac() {
    clear_errs_mac();
    anno.annotations.errs_mac.splice(anno.now_err_mac_id - 1, 1);
    render_errs_mac();
    anno.isModify = true;
    TIP("TIP", T("success_del_anno_mac"), 0)
}
function del_a_modi(b) {
    clear_all_modis();
    anno.annotations.modis.splice(anno.now_modi_id - 1, 1);
    render_modis();
    anno.isModify = true;
    var a = "";
    switch (b) {
        case"del":
            a = T("del");
            break;
        case"ins":
            a = T("ins");
            break;
        case"sub":
            a = T("sub");
            break;
        default:
            break
    }
    TIP("TIP", T("success_del_anno_") + a + T("anno"), 0)
}
function del_an_eval(b) {
	/*å é¤åäº«çªå£ä¸­å¯¹åºçå¥å­ï¼å¹¶ä¿®æ¹åä¸ªå¥å­çidç¼å·*/
	//å é¤åäº«çªå£ä¸­å¯¹åºçå¥å­
	 $("#text_id_"+anno.now_eval_id).remove();
	 //ä¿®æ¹å©ä¸å¥å­çidå¼
	 var div_id = "";
	 var text_id_number =0;
   	 $("#show_recommended_sentences").children("div").each(function(){
   		 div_id=this.id;
   		 text_id_number = div_id.replace("text_id_","");
   	     if(text_id_number>anno.now_eval_id){
   	    	$('.'+div_id).attr('id','text_id_'+(text_id_number-1));
   	    	$('#text_id_'+(text_id_number-1)).removeClass();
   	    	$('#text_id_'+(text_id_number-1)).addClass('text_id_'+(text_id_number-1));
   	     }
   	 });
   	$("#show_questioned_sentences").children("div").each(function(){
  		 div_id=this.id;
  		 text_id_number = div_id.replace("text_id_","");
  	     if(text_id_number>anno.now_eval_id){
  	    	$('.'+div_id).attr('id','text_id_'+(text_id_number-1));
  	    	$('#text_id_'+(text_id_number-1)).removeClass();
  	    	$('#text_id_'+(text_id_number-1)).addClass('text_id_'+(text_id_number-1));
  	     }
  	 });
	/*å é¤åäº«çªå£ä¸­å¯¹åºçå¥å­ï¼å¹¶ä¿®æ¹åä¸ªå¥å­çidç¼å·  ç»æ*/
    clear_all_evals();
    anno.annotations.evals.splice(anno.now_eval_id - 1, 1);
    render_evals();
    anno.isModify = true;
    var a = "";
    switch (b) {
        case"good":
            modi_str = T("eval_g");
            break;
        case"question":
            modi_str = T("eval_q");
            break;
        default:
            break
    }
    TIP("TIP", T("success_del_anno_") + modi_str + T("anno"), 0)
}
/**
 * å é¤åå¥ç¹è¯
 * @param {*} b 
 */
function del_sent_anno(b) {
	
    clear_all_evals();
    anno.annotations.evals.splice(anno.now_eval_id - 1, 1);
    render_evals();
    anno.isModify = true;
    var a = "";
    switch (b) {
        case"good":
            modi_str = T("eval_g");
            break;
        case"question":
            modi_str = T("eval_q");
            break;
        default:
            break
    }
    TIP("TIP", T("success_del_anno_") + modi_str + T("anno"), 0)
}
function change_back_to_work_mode_before() {
    if (anno.work_mode_before_update == "simple") {
        turn_to_simple_mode()
    } else {
        turn_to_complicated_mode()
    }
};


function  popup_anno_panel(showReviewContain){

}

function setTrFlagColor(id){
  // $("#pop-reset").hide()
  // var colorStyle="#20A0FF"
  var err_type=""
  switch(id){
    case 0:
    case 1:
    case 2:
    case 9:
      return "#20A0FF"
      break;
    case 7:
    case 3:
    case 8:
    case 10:
      return "#F5A623"
      break;
    case 4:
    case 5:
    case 6:
      return "#7ED321";
      break;
    case 11:
      return "#D100E8"
      break;
    default:
      return "#D100E8";
  }
}

function setBallColor(name_zh){
    $("#pop-reset").hide()
    // var colorStyle="#20A0FF"
    var err_type=""
    switch(name_zh){
        case "ä¸­å¼è±è¯­":
            var err_type="SyntaxError";
            return "#FFA200"
            break;
        case "æ¼åéè¯¯":
            var err_type="CollocationError";
            return "#20A0FF"
            break;
        case "åä½è§è":
            var err_type="NormsError";
            return "#20A0FF"
            break;
        case "æ­ééè¯¯":
            var err_type="CollocationError";
            return "#20A0FF"
            break;
        case "åè¯è­¦ç¤º":
            var err_type="OtherError";
            return "#57D600";
            break;
        case "ç­è¯­éè¯¯":
            var err_type="CollocationError";
            return "#20A0FF"
            break;
        case "é£æ ¼éè¯¯":
            var err_type="OtherError";
            return "#57D600";
            break;
        case "é«çº§è¡¨è¾¾":
            var err_type="OtherError";
            return "#57D600";
            break;
        case "å è¯éè¯¯":
            var err_type="CollocationError";
            return "#20A0FF"
            break;
        case "å¥å­éè¯¯":
            var err_type="SyntaxError";
            return "#FFA200"
            break;
        case "å¥å­è­¦ç¤º":
            var err_type="OtherError";
            return "#57D600";
            break;
        case "æ®éè±è¯­":
            var err_type="OtherError";
            return "#57D600";
            break;
        case "åä½éè¯¯":
            var err_type="SyntaxError";
            return "#FFA200"
            break;
        case "æ¯è¯­æ»¥ç¨":
            var err_type="OtherError";
            return "#57D600";
            break;
        case "ç»´åºéè¯¯":
            var err_type="OtherError";
            return "#57D600";
            break;
        case "è¯­æ³éè¯¯":
            var err_type="SyntaxError";
            // var colorStyle="#FF4949;"
            return "#FFA200"
            break;
        case "è¯­ä¹éè¯¯":
            var err_type="OtherError";
            return "#57D600";
            break;
        case "æ¯è¾çº§éè¯¯":
            var err_type="CollocationError";
            return "#20A0FF"
            break;
        case "æ ç¹éè¯¯":
            var err_type="OtherError";
            return "#57D600";
            break;
        case "å®å è¯ç¼ºå¤±":
            var err_type="CollocationError";
            return "#20A0FF"
            break;
        case "ç­è¯­åä½":
            var err_type="CollocationError";
            return "#20A0FF"
            break;
        case "åºå®ç­è¯­":
            var err_type="OtherError";
            return "#57D600";
            break;
        case "è¡æä¹ æ¯":
            var err_type="OtherError";
            return "#57D600";
        case "è¿ä¹è¯æ··ç¨":
            var err_type="OtherError";
            return "#57D600";
            break;
        case "å¥å­ç»ææè¯¯":
            var err_type="SyntaxError";
            return "#FFA200"
            break;
        case "å£è¯­åè¡¨è¾¾":
            var err_type="OtherError";
            return "#57D600";
            break;
        case "ææå¨è¯éè¯¯":
            var err_type="CollocationError";
            return "#20A0FF"
            break;
        case "åä½è¡¨è¾¾":
            var err_type="OtherError";
            return "#57D600";
        case "åä½ç­è¯­":
            var err_type="CollocationError";
            return "#20A0FF"
            break;
        case "åé¿è¡¨è¾¾":
            var err_type="OtherError";
            return "#57D600";
            break;
        case "å­¦ä¹ æç¤º":
            var err_type="OtherError";
            return "#57D600";
            break;
        case "ä¸è´æ§éè¯¯":
            var err_type="OtherError";
            return "#57D600";
            break;
        case "å¶ä»éè¯¯":
            var err_type="OtherError";
            return "#57D600";
            break;
        default:
            var err_type="OtherError";
            return "#57D600";
    }
}