//////////////////////////////////////////////
// Obfuscated by Javascript Obfuscator 4.3  //
// http://javascript-source.com             //
//////////////////////////////////////////////
/*eval((function(x) {
	var d = '';
	var p = 0;
	while (p < x.length) {
		if (x.charAt(p) != '`')
			d += x.charAt(p++);
		else {
			var l = x.charCodeAt(p + 3) - 28;
			if (l > 4)
				d += d.substr(d.length - x.charCodeAt(p + 1) * 96
						- x.charCodeAt(p + 2) + 3104 - l, l);
			else
				d += '`';
			p += 4
		}
	}
	return d
})*/
//		('function slashtip(class_tip,time){$("#realtime_tips").removeClass().add` %""tip_dbug");` C0` ?&"+` ~%+"` 73show();if(time==0){}else{setTimeout("$(\'` K*\'`!E5\'`!V$\');` 5>html(\'&nbsp;\');"`"i!*1000);}}`#.%TIP(tip_type,msg`#.#if(sys.debug<1){return;}`"40text(msg);switch` g%){case"ALERT":`$8%`#a!alert`!O");break;` H!WARNING` ?,warning` >/TIP` =,tip` 6/ERROR` ;,error` ?*default` :+`%Q!` ;)`#:\'updateSysInfo(`#/+2`#0*sys_teacher_id`#7$sys.` ,&`&*"sys_writing` ;+` ,&` D"anno_work_mode` B$anno.` -%` ?\'line`$<!` =)` -%` ?\'nowTagT` ;,` -&` j(ocal` d+` .!` 9\'side_start` ;)side.` 2!` <,en`"P%` @&en`"L(se`$ !`&a%` B"` .#` B"errs_length` 9)annota` D!.errs.` >"`)o!!` -1_mac`+M"` &$` i+"0");`*A"` +7` c5`!9%`%g!modi`!X=` @!` O%`!0!val`".>val` I*`%*$_mark`&G\'`%+$` 0$` ?+er`\'=(` D%` 1"` j,odi` e1` 2"` j,val` f1` 2"`!5/mac`!44` 5"`(p&` S!`(C(sys`"|!`(>,now_item"`.-#$toJSON` t&item));`*e&json_encode(obj`*X$ $.` T#obj` ?-de` K!json){var obj=null;try{obj=eval("("+json+")");}catch(`/+"testing){`.7!(R("frame`*]!` x\'`--#)` b!);}}`!W#obj`!I\'$dump`!p*`!s&,{indentText:"\\t",delimiter:"\\n"}`"2(include(src){document.body.appendChild(` 1%createElement("script")).src=src`!Y(clone(origin`"^"ypeof ` ,"!="object"`!|%` 3";}var ` X!d;if` Z# instanceof Array){` ="=[];for(var i=0;i<` K"`(W#;i++`!+.[i]=`!5\'` }%` 3!null` v$[i]`%""`+0"` +&`"1)[i]);}` 3,` 3%;}` /)={}`!m!i i`"L$` `~`!@>`#~#`#r#`$]\'extend` b#Obj,coverOb` "#All`(."tempObj`!+*Obj`/-!`"6#` =#`%*/` 3#;}`$d% in `!#$`(]#` >!`"^!undefined||`!<&` 6\'` Q$`"7"` s-`"4%`(Q#targetO`!O!,format`"/"defaultF` .!=`(t#:0,`(x(`(u)",`(m#F` }#:false`%.!mat=` w"?`#N$` )",` z)):` ");`"i!`!+!String=""` #-Last="";if` l#.`!X&!=""){` *)++;` M-(new`(v"` U*)).join` f.)` W)` G5+1` G7}switch`%W%`#}\'){case`%a$:if`$9)`*^/var resul`!J$`*j-` U(`*t)var e`,p"` U#`%F0[i]`%U$;if(` D)){`!/(.push(`"s(+` @*`&p!`!`\'"["+`"x#`&$%+` e)`#=!",` 5.)` G.`$l,+"]"`*z#`#,7Date`)H$"new` ,!("+`#))getFullYear()+",` -.Month` %3` m!` %2Hours` [4inute` &4Second` B6llis` 9&)`"G?`&Y$`%z4key in`&+var key`%q+key)`)i!value`&!8key`&2)` F\'`%|=`!/%+": "+` O(`&9-{`%Lz}";}}}break;`)|!s` 8!":var str=`"I(;str=str.replace(/\\\\"/g,"\\\\\\\\\\"")` ./r` :"r` (1t` 7"t` (1n` 7"n` (1f` 7"f` (1`!L$"");`#@*\\""+str+"\\"";`"K\'number":` A)isFinite`%,))?` 8"` \'*:"null` f)boolean` e+`\'c)to` e#)` M(`2G$`. !`.\\%`1Y)`&4*` \\5`(T"`"T*";`%"(`!q!`!T*`!})`24#:;`4-$` ?(;}`\'Z$rototype.$trim=`!z$(`,8$ this`$7&^[\\xA0\\s\\n\\t]*|[` "($/g,"");};`0C!` p(indexOf` u&what`3&!`0I(his`0@)if(this[i]==` K"`!M#i`)\'!turn-1;};'))

function slashtip(class_tip, time) {
	$("#realtime_tips").removeClass().addClass("tip_dbug");
	$("#realtime_tips").addClass("" + class_tip + "");
	$("#realtime_tips").show();
	if (time == 0) {
	} else {
		setTimeout(
				"$('#realtime_tips').removeClass().addClass('tip_dbug');$('#realtime_tips').removeClass().html('&nbsp;');",
				time * 1000);
	}
}
function TIP(tip_type, msg, time) {
	if (sys.debug < 1) {
		return;
	}
	if(msg==NaN){
		msg=""
	}
	$("#realtime_tips").text(msg);
	switch (tip_type) {
	case "ALERT":
		slashtip("tip_alert", time);
		break;
	case "WARNING":
		slashtip("tip_warning", time);
		break;
	case "TIP":
		slashtip("tip_tip", time);
		break;
	case "ERROR":
		slashtip("tip_error", time);
		break;
	default:
		slashtip("tip_dbug", time);
		break;
	}
}
function updateSysInfo() {
	if (sys.debug < 2) {
		return;
	}
	$("#sys_teacher_id").text(sys.teacher_id);
	$("#sys_writing_id").text(sys.writing_id);
	$("#anno_work_mode").text(anno.work_mode);
	$("#anno_line_type").text(anno.line_type);
	$("#anno_nowTagType").text(anno.nowTagType);
	$("#anno_locale").text(anno.locale);
	$("#anno_side_start").text(anno.side.start);
	$("#anno_side_end").text(anno.side.end);
	$("#anno_sections").text(anno.sections);
	$("#errs_length").text(anno.annotations.errs.length);
	if (!anno.annotations.errs_mac) {
		$("#errs_mac_length").text("0");
	} else {
		$("#errs_mac_length").text(anno.annotations.errs_mac.length);
	}
	$("#modis_length").text(anno.annotations.modis.length);
	$("#evals_length").text(anno.annotations.evals.length);
	$("#anno_now_mark_id").text(anno.now_mark_id);
	$("#anno_now_err_id").text(anno.now_err_id);
	$("#anno_now_modi_id").text(anno.now_modi_id);
	$("#anno_now_eval_id").text(anno.now_eval_id);
	$("#anno_now_err_mac_id").text(anno.now_err_mac_id);
	$("#sys_anno_mode").text(sys.anno_mode);
	$("#anno_now_item").html($toJSON(anno.now_item));
}
function json_encode(obj) {
	return $.toJSON(obj);
}
function json_decode(json) {
	var obj = null;
	try {
		obj = eval("(" + json + ")");
	} catch (e) {
		if (testing) {
			alert(R("framework_json_decode_error") + json);
		}
	}
	return obj;
}
function $dump(obj) {
	return $toJSON(obj, {
		indentText : "\t",
		delimiter : "\n"
	});
}
function include(src) {
	document.body.appendChild(document.createElement("script")).src = src;
}
function $clone(origin) {
	if (typeof origin != "object") {
		return origin;
	}
	var cloned;
	if (origin instanceof Array) {
		cloned = [];
		for (var i = 0; i < origin.length; i++) {
			if (typeof origin[i] == "object") {
				if (origin[i] == null) {
					cloned[i] = null;
				} else {
					cloned[i] = $clone(origin[i]);
				}
			} else {
				cloned[i] = origin[i];
			}
		}
	} else {
		cloned = {};
		for (i in origin) {
			if (typeof origin[i] == "object") {
				if (origin[i] == null) {
					cloned[i] = null;
				} else {
					cloned[i] = $clone(origin[i]);
				}
			} else {
				cloned[i] = origin[i];
			}
		}
	}
	return cloned;
}
function $extend(originObj, coverObj, coverAll) {
	var tempObj = $clone(originObj);
	if (typeof tempObj != "object") {
		return tempObj;
	}
	for ( var i in coverObj) {
		if (tempObj[i] == undefined || coverAll) {
			tempObj[i] = coverObj[i];
		}
	}
	return tempObj;
}
function $toJSON(targetObject, format) {
	var defaultFormat = {
		indent : 0,
		indentText : "",
		delimiter : "",
		includeFunction : false
	};
	format = format ? $extend(format, defaultFormat) : defaultFormat;
	var indentString = "";
	var indentStringLast = "";
	if (format.indentText != "") {
		format.indent++;
		indentStringLast = (new Array(format.indent)).join(format.indentText);
		indentString = (new Array(format.indent + 1)).join(format.indentText);
	}
	switch (typeof targetObject) {
	case "object":
		if (targetObject instanceof Array) {
			var resultString = [];
			for (var i = 0; i < targetObject.length; i++) {
				var elementString = $toJSON(targetObject[i], format);
				if (elementString) {
					resultString.push(indentString + elementString);
				}
			}
			resultString = "[" + format.delimiter
					+ resultString.join("," + format.delimiter)
					+ format.delimiter + indentStringLast + "]";
		} else {
			if (targetObject instanceof Date) {
				return "new Date(" + targetObject.getFullYear() + ","
						+ targetObject.getMonth() + ","
						+ targetObject.getDate() + ","
						+ targetObject.getHours() + ","
						+ targetObject.getMinutes() + ","
						+ targetObject.getSeconds() + ","
						+ targetObject.getMilliseconds() + ")";
			} else {
				if (targetObject instanceof Object) {
					var resultString = [];
					for (key in targetObject) {
						var keyString = $toJSON(key);
						var valueString = $toJSON(targetObject[key], format);
						if (valueString) {
							resultString.push(indentString + keyString + ": "
									+ valueString);
						}
					}
					resultString = "{" + format.delimiter
							+ resultString.join("," + format.delimiter)
							+ format.delimiter + indentStringLast + "}";
				}
			}
		}
		break;
	case "string":
		var str = targetObject;
		str = str.replace(/\\"/g, "\\\\\"");
		str = str.replace(/\r/g, "\\r");
		str = str.replace(/\t/g, "\\t");
		str = str.replace(/\n/g, "\\n");
		str = str.replace(/\f/g, "\\f");
		str = str.replace(/\"/g, "\\\"");
		resultString = "\"" + str + "\"";
		break;
	case "number":
		resultString = isFinite(targetObject) ? String(targetObject) : "null";
		break;
	case "boolean":
		resultString = targetObject.toString();
		break;
	case "function":
		if (format.includeFunction) {
			resultString = targetObject.toString();
		} else {
			resultString = "";
		}
		break;
	case "null":
		resultString = "null";
		break;
	default:
		;
	}
	return resultString;
}
String.prototype.$trim = function() {
	return this.replace(/^[\xA0\s\n\t]*|[\xA0\s\n\t]*$/g, "");
};
Array.prototype.$indexOf = function(what) {
	for (var i = 0; i < this.length; i++) {
		if (this[i] == what) {
			return i;
		}
	}
	return -1;
};